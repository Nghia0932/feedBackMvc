@* Partial view to create a survey template *@
@model IEnumerable<feedBackMvc.Models.IN_NhomCauHoiKhaoSat>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="~/css/_Show_In_MauKhaoSat.css" />

<partial name="_NotificationModal" model="new NotificationModalModel()" />
<partial name="_IN_MauKhaoSatNoiTru" model="new KhaoSatNoiTruViewModel()" />

<div class="view">
    <div class="survey-template">
        <!-- Header section with background image and text overlay -->
        <div class="header-section">
            <div class="background-image"></div>
            <h1>
                KHẢO SÁT Ý KIẾN NGƯỜI BỆNH NỘI TRÚ
            </h1>
        </div>

        <!-- Content section with form inputs and calendar -->
        <div class="content-section row mt-4">
            <div class="col-md-6">
                <!-- Form inputs -->
                <div class="form-group">
                    <label for="tenKhaoSat" style="font-size: 1.4rem; color: blue;">Mẫu khảo sát ý kiến nội trú</label>
                    <div>
                        <input type="text" class="form-control" id="tenKhaoSat" placeholder="Nhập tên khảo sát"
                            autocomplete="off" required>
                    </div>
                </div>
                @*<div class="form-group row">
                <div class="col-md-6">
                <label for="ngayBatDau">Ngày bắt đầu khảo sát</label>
                <div class="input-wrapper">
                <input type="date" class="form-control" id="ngayBatDau" autocomplete="off">
                </div>
                </div>
                <div class="col-md-6">
                <label for="ngayKetThuc">Ngày hết hạn khảo sát</label>
                <div class="input-wrapper">
                <input type="date" class="form-control" id="ngayKetThuc" autocomplete="off">
                </div>
                </div>
                </div>*@
                <div class="form-group">
                    <div class="form-row align-items-center">
                        <div class="col-auto">
                            <label for="soLuongDanhGia">Số lượng đánh giá khảo sát tối đa</label>
                        </div>
                        <div class="col">
                            <input type="number" class="form-control" placeholder="Số lượng.." id="soLuongDanhGia"
                                min="0" style="width: 60%;">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th style="max-width: 150px;">Nhóm câu hỏi [nội trú]</th>
                <th>Nội dung</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="question-group-container">
            @foreach (var nhom in Model)
            {
                <tr class="parent-row" data-target="#questions-@nhom.IdIN_NhomCauHoiKhaoSat">
                    <td class="title" style="font-weight: 500; max-width: 150px;">@nhom.TieuDe</td>
                    <td class="content">@nhom.NoiDung</td>
                    <td>
                        <span class="toggleIcon" data-target="#questions-@nhom.IdIN_NhomCauHoiKhaoSat" style="color: blue;">
                            <i class="fas fa-chevron-right"></i>
                        </span>
                        <span class="check-icon" data-id="@nhom.IdIN_NhomCauHoiKhaoSat"
                            style="cursor: pointer; color: #00b22c; margin-right: 10px;">
                            <i class="far fa-square"></i>
                        </span>
                    </td>
                </tr>
                <tr class="child-questions" id="@nhom.IdIN_NhomCauHoiKhaoSat">
                    <td colspan="3">
                        <table class="child-table">
                            <thead>
                                <tr>
                                    <th>Tiêu đề câu hỏi</th>
                                    <th>Câu hỏi</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var cauHoi in nhom.CauHoiKhaoSats)
                                {
                                    <tr class="child-row" data-id="#questions-@cauHoi.IdIN_CauHoiKhaoSat"
                                        data-target="#questions-@nhom.IdIN_NhomCauHoiKhaoSat">
                                        <td class="title-question" style="width:18%;">@cauHoi.TieuDeCauHoi</td>
                                        <td class="question">@cauHoi.CauHoi</td>
                                        <td style="min-width: 100px; justify-content: space-around; align-items: center;">
                                            <span class="check-icon-child" data-id="@cauHoi.IdIN_CauHoiKhaoSat"
                                                style="cursor: pointer; color: #00b22c; margin-right: 10px;">
                                                <i class="far fa-square"></i>
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3">
                    <div class="footer-buttons">
                        <button id="create-btn" class="btn btn-success">
                            <i class="fas fa-plus-circle"></i> Tạo
                        </button>
                        <button id="see-be4-btn" class="btn btn-danger">
                            <i class="fas fa-eye"></i> Xem trước
                        </button>
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@*<script>
$(document).ready(function() {
function validateDates() {
const startDate = new Date($('#ngayBatDau').val());
const endDate = new Date($('#ngayKetThuc').val());
if(startDate && endDate) {
if(endDate <= startDate) {
var modalData = {
Title: 'Canht báo',
Message: 'Ngày hết hạn khảo sát phải lớn hơn ngày bắt đầu',
IconClass: 'fa-info-circle',
HasAction: false,
NotificationType: 'info'
};
$('#ngayKetThuc').val('');
showNotificationModal(modalData);

}
}
}
$('#ngayBatDau, #ngayKetThuc').on('change',validateDates);
});
</script>*@

<script>
    $(document).ready(function() {
        function formatDate(date) {
            if(!date) return null;
            const d = new Date(date);
            return d.toISOString().split('T')[0]; // Chỉ lấy phần ngày
        }
        // Hàm tùy chỉnh để sắp xếp theo thứ tự mong muốn
        function customSort(a,b) {
            // Tách ký tự đầu tiên và số từ các phần tử
            const [prefixA,numA] = [a[0],parseInt(a.slice(1),10)];
            const [prefixB,numB] = [b[0],parseInt(b.slice(1),10)];

            // So sánh các prefix (A, B, C, ...) theo thứ tự chữ cái
            if(prefixA < prefixB) return -1;
            if(prefixA > prefixB) return 1;

            // Nếu prefix giống nhau, so sánh số theo thứ tự số
            return numA - numB;
        }

        function toggleChildQuestions(target) {
            var icon = $(target).closest('tr').find('.toggleIcon i');
            var childRow = $(target).closest('tr').next('.child-questions');
            childRow.toggle();
            icon.toggleClass('fa-chevron-right fa-chevron-down');
        }

        // Handle click on the toggle icon
        $('.toggleIcon').on('click',function() {
            toggleChildQuestions(this);
        });


        // Toggle check icon for parent row and affect child rows
        $('.check-icon').click(function() {
            var icon = $(this).find('i');
            var isChecked = icon.hasClass('far fa-square');
            // Toggle the parent row's check state
            icon.toggleClass('far fa-square fas fa-check-square');
            // Check/uncheck all child rows based on the parent's state
            $(this).closest('tr').nextUntil('.parent-row').find('.check-icon-child i')
                .removeClass(isChecked ? 'far fa-square' : 'fas fa-check-square')
                .addClass(isChecked ? 'fas fa-check-square' : 'far fa-square');
        });

        // Toggle check icon for child rows independently
        $('.check-icon-child').click(function(e) {
            e.stopPropagation();
            // Tìm hàng <tr> chứa thẻ check-icon-child này (hàng con)
            var childRow = $(this).closest('.child-row');
            // Lấy giá trị data-target từ hàng con
            var parentTarget = childRow.data('target');
            // Tìm hàng cha (parent-row) tương ứng
            var parentRow = $('.parent-row[data-target="' + parentTarget + '"]');
            var icon = $(this).find('i');
            var parentIcon = parentRow.find('.check-icon i');
            // Toggle the child row check state
            icon.toggleClass('far fa-square fas fa-check-square');
            var allIcons = parentRow.nextUntil('.parent-row').find('.check-icon-child i');
            var checkedIcons = parentRow.nextUntil('.parent-row').find('.check-icon-child i.fas.fa-check-square');
            var parentIcon = parentRow.find('.check-icon i');
            if(checkedIcons.length > 0) {
                // Nếu có ít nhất một checkbox con đã được chọn
                parentIcon.removeClass('far fa-square').addClass('fas fa-check-square');
            } else {
                // Nếu không có checkbox con nào được chọn
                parentIcon.removeClass('fas fa-check-square').addClass('far fa-square');
            }
        });
        $('#see-be4-btn').click(function() {
            var nhomCauHoi = [];
            var CauHoi = [];
            // Find all checked parent rows
            $('.parent-row').each(function() {
                var parentIcon = $(this).find('.check-icon i');
                if(parentIcon.hasClass('fas fa-check-square')) {
                    // Add TieuDe of the checked parent row to nhomCauHoi array
                    var parentTieuDe = $(this).find('.title').text().trim();
                    var parentNoiDung = $(this).find('.content').text().trim();
                    nhomCauHoi.push(parentTieuDe + '.' + parentNoiDung);

                    // Find all checked child questions within this parent
                    var tieuDeCauHoiArray = [];
                    var cauHoiArray = [];

                    $(this).nextUntil('.parent-row').find('.check-icon-child i.fas.fa-check-square').each(function() {
                        var childTieuDeCauHoi = $(this).closest('.child-row').find('.title-question').text().trim();
                        var childCauHoi = $(this).closest('.child-row').find('.question').text().trim();

                        tieuDeCauHoiArray.push(childTieuDeCauHoi);
                        cauHoiArray.push(childCauHoi);
                    });

                    // Add the TieuDeCauHoi and CauHoi arrays to the CauHoi array
                    CauHoi.push({TieuDeCauHoi: tieuDeCauHoiArray,CauHoi: cauHoiArray});
                }
            });

            // Function to sort question titles based on a custom order
            function customSort(a,b) {
                // Extract letter and number parts from the question titles
                var regex = /([A-Z]+)([0-9]+)/;
                var matchA = a.match(regex);
                var matchB = b.match(regex);

                if(!matchA || !matchB) return 0; // If either does not match the format, do not sort

                var letterA = matchA[1];
                var numberA = parseInt(matchA[2],10);
                var letterB = matchB[1];
                var numberB = parseInt(matchB[2],10);

                if(letterA < letterB) return -1;
                if(letterA > letterB) return 1;
                return numberA - numberB;
            }

            // Sort TieuDeCauHoi and corresponding CauHoi arrays
            CauHoi.forEach(function(item) {
                var sortedIndices = item.TieuDeCauHoi
                    .map((value,index) => ({value,index}))
                    .sort((a,b) => customSort(a.value,b.value))
                    .map(obj => obj.index);

                item.TieuDeCauHoi = sortedIndices.map(index => item.TieuDeCauHoi[index]);
                item.CauHoi = sortedIndices.map(index => item.CauHoi[index]);
            });

            // Logging for debugging purposes
            console.log('Nhóm câu hỏi:',nhomCauHoi);
            console.log('Câu hỏi:',CauHoi);
            if(nhomCauHoi.length === 0) {
                var modalData = {
                    Title: 'Canht báo',
                    Message: 'Vui lòng chọn câu hỏi khảo sát',
                    IconClass: 'fa-info-circle',
                    HasAction: false,
                    NotificationType: 'info'
                };
                showNotificationModal(modalData);
                return;
            } else {
                var khaoSatData = {
                    NhomCauHoi: nhomCauHoi,
                    CauHoi: CauHoi
                };
                populateKhaoSatNoiTru(khaoSatData);
                return;
            }
        });

        $('#create-btn').on('click',function() {
            var nhomCauHoi = [];
            var tieuDeCauHoi = [];
            $('.parent-row').each(function() {
                var parentIcon = $(this).find('.check-icon i');
                if(parentIcon.hasClass('fas fa-check-square')) {
                    // Add TieuDe of the checked parent row to nhomCauHoi array
                    var parentTieuDe = $(this).find('.title').text().trim();
                    nhomCauHoi.push(parentTieuDe);
                    $(this).nextUntil('.parent-row').find('.check-icon-child i.fas.fa-check-square').each(function() {
                        var childTieuDeCauHoi = $(this).closest('.child-row').find('.title-question').text().trim();
                        tieuDeCauHoi.push(childTieuDeCauHoi);
                    });
                }
            });
            function sortArray(arr) {
                return arr.sort((a,b) => {
                    const [letterA,numberA] = [a[0],parseInt(a.slice(1))];
                    const [letterB,numberB] = [b[0],parseInt(b.slice(1))];

                    if(letterA === letterB) {
                        return numberA - numberB;
                    } else {
                        return letterA.localeCompare(letterB);
                    }
                });
            }
            nhomCauHoi = sortArray(nhomCauHoi);
            tieuDeCauHoi = sortArray(tieuDeCauHoi);
            var tenKhaoSat = $('#tenKhaoSat').val().trim();
    @*var ngayBatDau = $('#ngayBatDau').val();
                var ngayKetThuc = $('#ngayKetThuc').val();*@
            var soLuongDanhGia = $('#soLuongDanhGia').val().trim();
            if(!tenKhaoSat) {
                var modalData = {
                    Title: 'Cảnh báo',
                    Message: 'Vui lòng nhập tên mẫu khảo sát',
                    IconClass: 'fa-info-circle',
                    HasAction: false,
                    NotificationType: 'info'
                };
                showNotificationModal(modalData);
                return;
    @*} else if(!ngayBatDau || !ngayKetThuc) {
                    var modalData = {
                    Title: 'Cảnh báo',
                    Message: 'Vui lòng chọn ngày',
                    IconClass: 'fa-info-circle',
                    HasAction: false,
                    NotificationType: 'info'
                    };
                    showNotificationModal(modalData);
                    return;*@
            } else if(nhomCauHoi.length === 0) {
                var modalData = {
                    Title: 'Cảnh báo',
                    Message: 'Vui lòng chọn câu hỏi khảo sát',
                    IconClass: 'fa-info-circle',
                    HasAction: false,
                    NotificationType: 'info'
                };
                showNotificationModal(modalData);
                return;
            } else {
                $.ajax({
                    url: '@Url.Action("ThemMauKhaoSat", "In_MauKhaoSat")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        TenMauKhaoSat: tenKhaoSat,
    @*NgayBatDau: formatDate(ngayBatDau),
                        NgayKetThuc: formatDate(ngayKetThuc),*@
                        SoLuongDanhGia: soLuongDanhGia ? soLuongDanhGia : 0,
                        NhomCauHoi: nhomCauHoi,
                        TieuDeCauHoi: tieuDeCauHoi
                    }),
                    success: function(response) {
                        if(response.success) {
                            $('.view').empty();
                            $('.view').empty().load('/IN_MauKhaoSat/Show_In_MauKhaoSat',function() {
                                // Chỉ gắn lại sự kiện nếu có nội dung mới
                            });
                            var modalData = {
                                Title: 'Thông báo',
                                Message: 'Thêm mẫu khảo sát nội trú thành công !',
                                IconClass: 'fa-check-circle',
                                HasAction: false,
                                NotificationType: 'success'
                            };
                            showNotificationModal(modalData);

                            return;
                        } else {
                            var modalData = {
                                Title: 'Lỗi',
                                Message: response.message,
                                IconClass: 'fa-exclamation-triangle',
                                HasAction: false,
                                NotificationType: 'error'
                            };
                            showNotificationModal(modalData);
                            return;
                        }
                    },
                error: function(xhr,status,error) {
                    alert("Có lỗi xảy ra: " + error);
                }
            });
    }
        });

    });
</script>
